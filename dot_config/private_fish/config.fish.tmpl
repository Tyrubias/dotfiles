set -U fish_greeting

set -Ux BAT_THEME Dracula
set -Ux HOMEBREW_BAT true
set -Ux EDITOR nvim
set -Ux VISUAL nvim
set -Ux NVM_AUTO_USE true
set -Ux NVM_LAZY_LOAD true
set -Ux XDG_CONFIG_HOME {$HOME}/.config
set -Ux XDG_CACHE_HOME {$HOME}/.cache
set -Ux XDG_DATA_HOME {$HOME}/.local/share
set -Ux XDG_STATE_HOME {$HOME}/.local/state
set -Ux BORG_REMOTE_PATH borg1

{{ if (and (eq .chezmoi.os "linux") (not (.chezmoi.kernel.osrelease | lower | contains "microsoft"))) }}
set -Ux DOCKER_HOST "unix://$XDG_RUNTIME_DIR/docker.sock"
{{ end }}
if test -e "$HOME/.victor-secrets.fish"
    source "$HOME/.victor-secrets.fish"
end

if set -q KITTY_INSTALLATION_DIR
    set --global KITTY_SHELL_INTEGRATION enabled
    source "$KITTY_INSTALLATION_DIR/shell-integration/fish/vendor_conf.d/kitty-shell-integration.fish"
    set --prepend fish_complete_path "$KITTY_INSTALLATION_DIR/shell-integration/fish/vendor_completions.d"
end

if status is-interactive
    # Commands to run in interactive sessions can go here
    # fish_vi_key_bindings
{{ if eq .chezmoi.os "darwin" }}
    eval (/opt/homebrew/bin/brew shellenv)
    rbenv init - fish | source
    test -e {$HOME}/.iterm2_shell_integration.fish ; and source {$HOME}/.iterm2_shell_integration.fish
{{ else }}
    eval (/home/linuxbrew/.linuxbrew/bin/brew shellenv)
{{ end }}
    fish_add_path -m $HOME/.local/bin
    fish_add_path -m $HOME/.cargo/bin
    fish_add_path -m $HOME/.sdkman/candidates/*/current/bin
end
{{ if eq .chezmoi.os "darwin" }}
eval /opt/homebrew/Caskroom/mambaforge/base/bin/conda "shell.fish" "hook" $argv | source
{{ else if (and (eq .chezmoi.os "linux") (not (.chezmoi.kernel.osrelease | lower | contains "microsoft"))) }}
eval /home/vsong/mambaforge/bin/conda "shell.fish" "hook" $argv | source
{{ end }}

