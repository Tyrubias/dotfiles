fish_config theme choose "Dracula Official"

set -g fish_greeting

set -gx BAT_THEME Dracula
set -gx HOMEBREW_BAT true
set -gx EDITOR nvim
set -gx VISUAL nvim
set -gx NVM_AUTO_USE true
set -gx NVM_LAZY_LOAD true
set -gx XDG_CONFIG_HOME {$HOME}/.config
set -gx XDG_CACHE_HOME {$HOME}/.cache
set -gx XDG_DATA_HOME {$HOME}/.local/share
set -gx XDG_STATE_HOME {$HOME}/.local/state
set -gx BORG_REMOTE_PATH borg1

set -gx PIP_REQUIRE_VIRTUALENV true
set -gx VIRTUAL_ENV_DISABLE_PROMPT true

set -gx HOMEBREW_NO_ENV_HINTS true

set -gx VCPKG_ROOT {$HOME}/Downloads/vcpkg

{{ if (and (eq .chezmoi.os "linux") (not (.chezmoi.kernel.osrelease | lower | contains "microsoft"))) }}
set -gx DOCKER_HOST "unix://$XDG_RUNTIME_DIR/docker.sock"
{{ end }}
if test -e "$HOME/.secrets.fish"
    source "$HOME/.secrets.fish"
end


if status is-interactive
    # Commands to run in interactive sessions can go here
    # fish_vi_key_bindings
{{ if eq .chezmoi.os "darwin" }}
    fzf_configure_bindings --directory=\cf

    set -gx HOMEBREW_PREFIX "/opt/homebrew";
    set -gx HOMEBREW_CELLAR "/opt/homebrew/Cellar";
    set -gx HOMEBREW_REPOSITORY "/opt/homebrew";

    fish_add_path --prepend --global '/opt/homebrew/bin' '/opt/homebrew/sbin'
    set -q MANPATH; or set MANPATH ''; set -gx MANPATH "/opt/homebrew/share/man" $MANPATH;
    set -q INFOPATH; or set INFOPATH ''; set -gx INFOPATH "/opt/homebrew/share/info" $INFOPATH;

    rbenv init - fish | source

    if $HOME/.iterm2/it2check
        test -e {$HOME}/.iterm2_shell_integration.fish ; and source {$HOME}/.iterm2_shell_integration.fish
    end

    bind \eX 'commandline | pbcopy'
{{ else }}
    bind \eX 'commandline | xclip -selection clipboard'
    eval (/home/linuxbrew/.linuxbrew/bin/brew shellenv)
    set -gx HOMEBREW_PREFIX "/home/linuxbrew/.linuxbrew"
    set -gx HOMEBREW_CELLAR "/home/linuxbrew/.linuxbrew/Cellar"
    set -gx HOMEBREW_REPOSITORY "/home/linuxbrew/.linuxbrew"

    fish_add_path --prepend --global '/home/linuxbrew/.linuxbrew/bin' '/home/linuxbrew/.linuxbrew/sbin'
    set -q MANPATH; or set MANPATH ''; set -gx MANPATH "/home/linuxbrew/.linuxbrew/share/man" $MANPATH;
    set -q INFOPATH; or set INFOPATH ''; set -gx INFOPATH "/home/linuxbrew/.linuxbrew/share/info" $INFOPATH;
{{ end }}
    if set -q KITTY_INSTALLATION_DIR
        set --global KITTY_SHELL_INTEGRATION enabled
        source "$KITTY_INSTALLATION_DIR/shell-integration/fish/vendor_conf.d/kitty-shell-integration.fish"
        set --prepend fish_complete_path "$KITTY_INSTALLATION_DIR/shell-integration/fish/vendor_completions.d"
        bind \eQ 'clone-in-kitty --type=tab'
    end

    fish_add_path --prepend --global $HOME/.local/bin
    fish_add_path --prepend --global $HOME/.cargo/bin

    for sdk in (path filter -d $HOME/.sdkman/candidates/*)
        fish_add_path --prepend --global $sdk/current/bin
    end
{{ if eq .chezmoi.os "darwin" }}
    if test -f /opt/homebrew/Caskroom/miniforge/base/bin/conda
        eval /opt/homebrew/Caskroom/miniforge/base/bin/conda "shell.fish" "hook" $argv | source
    else
        if test -f "/opt/homebrew/Caskroom/miniforge/base/etc/fish/conf.d/conda.fish"
            . "/opt/homebrew/Caskroom/miniforge/base/etc/fish/conf.d/conda.fish"
        else
            set -x PATH "/opt/homebrew/Caskroom/miniforge/base/bin" $PATH
        end
    end

    if test -f "/opt/homebrew/Caskroom/miniforge/base/etc/fish/conf.d/mamba.fish"
        source "/opt/homebrew/Caskroom/miniforge/base/etc/fish/conf.d/mamba.fish"
    end
{{ else if (and (eq .chezmoi.os "linux") (not (.chezmoi.kernel.osrelease | lower | contains "microsoft"))) }}
    if test -f /home/vsong/miniforge3/bin/conda
        eval /home/vsong/miniforge3/bin/conda "shell.fish" "hook" $argv | source
    else
        if test -f "/home/vsong/miniforge3/etc/fish/conf.d/conda.fish"
            . "/home/vsong/miniforge3/etc/fish/conf.d/conda.fish"
        else
            set -x PATH "/home/vsong/miniforge3/bin" $PATH
        end
    end

    if test -f "/home/vsong/miniforge3/etc/fish/conf.d/mamba.fish"
        source "/home/vsong/miniforge3/etc/fish/conf.d/mamba.fish"
    end
{{ end }}
end

if type -q direnv
    direnv hook fish | source
end

